
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASMENOSleftPORDIVIDIDOABS AND ANDB CORA CORC DECIMAL DIFERENTE DIVIDIDO DOBLEPUNTO DOLAR ENTERO EXIT GOTO IDENTIFICADOR IF IGUAL IGUALDOBLE IMPRIMIR MAIN MAS MAYOR MAYORIGUAL MENOR MENORIGUAL MENOS MOD NOT NOTB OR ORB PARA PARC POR PUNTOCOMA READ SHIFTD SHIFTI UNSET XOR XORBinicio    : etiquetasetiquetas : etiquetas etiquetaetiquetas : etiquetaetiqueta : IDENTIFICADOR DOBLEPUNTO instruccionesetiqueta : MAIN DOBLEPUNTO instruccionesinstrucciones :  instrucciones instruccion instrucciones : instruccion instruccion :  EXIT PUNTOCOMAinstruccion :  IMPRIMIR  PARA expresion PARC PUNTOCOMAinstruccion :  UNSET  PARA DOLAR IDENTIFICADOR PARC PUNTOCOMAinstruccion :  DOLAR  IDENTIFICADOR IGUAL expresion PUNTOCOMAinstruccion :  GOTO  IDENTIFICADOR  PUNTOCOMAinstruccion :  IF   expresion  instruccion  expresion : valor MAS valor\n                  | valor MENOS valor\n                  | valor POR valor\n                  | valor DIVIDIDO valor\n                  | valor MOD valor\n                  | valor ANDB valor\n                  | valor ORB valor\n                  | valor XORB valor\n                  | valor SHIFTD valor\n                  | valor SHIFTI valor\n\n\n\n\n                  | valor AND valor\n                  | valor OR valor\n                  | valor XOR valor\n\n\n                  | valor DIFERENTE valor\n                  | valor IGUALDOBLE valor\n                  | valor MAYOR valor\n                  | valor MAYORIGUAL valor\n                  | valor MENORIGUAL valor\n                  | valor MENOR valorexpresion :  valorexpresion : MENOS valor\n                | ABS PARA valor PARC\n                | NOTB valor\n                | NOT valor\n                | MAS valor\n                | READ PARA  PARC expresion : PARA expresion PARCvalor    : ENTEROvalor    : DECIMALvalor    : DOLAR IDENTIFICADOR'
    
_lr_action_items = {'IDENTIFICADOR':([0,2,3,6,9,10,14,15,17,18,19,35,37,39,40,93,95,97,],[4,4,-3,-2,-4,-7,22,23,-5,-6,-8,67,69,-12,-13,-9,-11,-10,]),'MAIN':([0,2,3,6,9,10,17,18,19,39,40,93,95,97,],[5,5,-3,-2,-4,-7,-5,-6,-8,-12,-13,-9,-11,-10,]),'$end':([1,2,3,6,9,10,17,18,19,39,40,93,95,97,],[0,-1,-3,-2,-4,-7,-5,-6,-8,-12,-13,-9,-11,-10,]),'DOBLEPUNTO':([4,5,],[7,8,]),'EXIT':([7,8,9,10,17,18,19,24,25,33,34,39,40,60,61,64,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,97,],[11,11,11,-7,11,-6,-8,11,-33,-41,-42,-12,-13,-38,-34,-36,-37,-43,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-40,-39,-9,-11,-35,-10,]),'IMPRIMIR':([7,8,9,10,17,18,19,24,25,33,34,39,40,60,61,64,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,97,],[12,12,12,-7,12,-6,-8,12,-33,-41,-42,-12,-13,-38,-34,-36,-37,-43,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-40,-39,-9,-11,-35,-10,]),'UNSET':([7,8,9,10,17,18,19,24,25,33,34,39,40,60,61,64,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,97,],[13,13,13,-7,13,-6,-8,13,-33,-41,-42,-12,-13,-38,-34,-36,-37,-43,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-40,-39,-9,-11,-35,-10,]),'DOLAR':([7,8,9,10,16,17,18,19,20,21,24,25,26,27,29,30,31,33,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,64,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,97,],[14,14,14,-7,35,14,-6,-8,35,37,14,-33,35,35,35,35,35,-41,-42,35,-12,-13,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-38,-34,35,-36,-37,-43,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-40,-39,-9,-11,-35,-10,]),'GOTO':([7,8,9,10,17,18,19,24,25,33,34,39,40,60,61,64,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,97,],[15,15,15,-7,15,-6,-8,15,-33,-41,-42,-12,-13,-38,-34,-36,-37,-43,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-40,-39,-9,-11,-35,-10,]),'IF':([7,8,9,10,17,18,19,24,25,33,34,39,40,60,61,64,65,67,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,95,96,97,],[16,16,16,-7,16,-6,-8,16,-33,-41,-42,-12,-13,-38,-34,-36,-37,-43,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-40,-39,-9,-11,-35,-10,]),'PUNTOCOMA':([11,23,25,33,34,60,61,64,65,67,68,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,94,96,],[19,39,-33,-41,-42,-38,-34,-36,-37,-43,93,95,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-40,-39,97,-35,]),'PARA':([12,13,16,20,28,29,32,38,],[20,21,29,29,62,29,66,29,]),'MENOS':([16,20,25,29,33,34,38,67,],[27,27,42,27,-41,-42,27,-43,]),'ABS':([16,20,29,38,],[28,28,28,28,]),'NOTB':([16,20,29,38,],[30,30,30,30,]),'NOT':([16,20,29,38,],[31,31,31,31,]),'MAS':([16,20,25,29,33,34,38,67,],[26,26,41,26,-41,-42,26,-43,]),'READ':([16,20,29,38,],[32,32,32,32,]),'ENTERO':([16,20,26,27,29,30,31,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'DECIMAL':([16,20,26,27,29,30,31,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'IGUAL':([22,],[38,]),'POR':([25,33,34,67,],[43,-41,-42,-43,]),'DIVIDIDO':([25,33,34,67,],[44,-41,-42,-43,]),'MOD':([25,33,34,67,],[45,-41,-42,-43,]),'ANDB':([25,33,34,67,],[46,-41,-42,-43,]),'ORB':([25,33,34,67,],[47,-41,-42,-43,]),'XORB':([25,33,34,67,],[48,-41,-42,-43,]),'SHIFTD':([25,33,34,67,],[49,-41,-42,-43,]),'SHIFTI':([25,33,34,67,],[50,-41,-42,-43,]),'AND':([25,33,34,67,],[51,-41,-42,-43,]),'OR':([25,33,34,67,],[52,-41,-42,-43,]),'XOR':([25,33,34,67,],[53,-41,-42,-43,]),'DIFERENTE':([25,33,34,67,],[54,-41,-42,-43,]),'IGUALDOBLE':([25,33,34,67,],[55,-41,-42,-43,]),'MAYOR':([25,33,34,67,],[56,-41,-42,-43,]),'MAYORIGUAL':([25,33,34,67,],[57,-41,-42,-43,]),'MENORIGUAL':([25,33,34,67,],[58,-41,-42,-43,]),'MENOR':([25,33,34,67,],[59,-41,-42,-43,]),'PARC':([25,33,34,36,60,61,63,64,65,66,67,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,96,],[-33,-41,-42,68,-38,-34,91,-36,-37,92,-43,94,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,96,-40,-39,-35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'etiquetas':([0,],[2,]),'etiqueta':([0,2,],[3,6,]),'instrucciones':([7,8,],[9,17,]),'instruccion':([7,8,9,17,24,],[10,10,18,18,40,]),'expresion':([16,20,29,38,],[24,36,63,70,]),'valor':([16,20,26,27,29,30,31,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,],[25,25,60,61,25,64,65,25,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> etiquetas','inicio',1,'p_inicio','Sintactico.py',22),
  ('etiquetas -> etiquetas etiqueta','etiquetas',2,'p_etiquetas_lista','Sintactico.py',26),
  ('etiquetas -> etiqueta','etiquetas',1,'p_etiquetas_lista_inicio','Sintactico.py',31),
  ('etiqueta -> IDENTIFICADOR DOBLEPUNTO instrucciones','etiqueta',3,'p_etiqueta_contenido','Sintactico.py',35),
  ('etiqueta -> MAIN DOBLEPUNTO instrucciones','etiqueta',3,'p_etiqueta_principal','Sintactico.py',39),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','Sintactico.py',43),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_lista_inicio','Sintactico.py',49),
  ('instruccion -> EXIT PUNTOCOMA','instruccion',2,'p_instrucciones_exit','Sintactico.py',55),
  ('instruccion -> IMPRIMIR PARA expresion PARC PUNTOCOMA','instruccion',5,'p_instrucciones_imprimir','Sintactico.py',59),
  ('instruccion -> UNSET PARA DOLAR IDENTIFICADOR PARC PUNTOCOMA','instruccion',6,'p_instrucciones_unset','Sintactico.py',63),
  ('instruccion -> DOLAR IDENTIFICADOR IGUAL expresion PUNTOCOMA','instruccion',5,'p_instrucciones_asignar','Sintactico.py',67),
  ('instruccion -> GOTO IDENTIFICADOR PUNTOCOMA','instruccion',3,'p_instrucciones_goto','Sintactico.py',72),
  ('instruccion -> IF expresion instruccion','instruccion',3,'p_instrucciones_if','Sintactico.py',76),
  ('expresion -> valor MAS valor','expresion',3,'p_expresion_binaria','Sintactico.py',81),
  ('expresion -> valor MENOS valor','expresion',3,'p_expresion_binaria','Sintactico.py',82),
  ('expresion -> valor POR valor','expresion',3,'p_expresion_binaria','Sintactico.py',83),
  ('expresion -> valor DIVIDIDO valor','expresion',3,'p_expresion_binaria','Sintactico.py',84),
  ('expresion -> valor MOD valor','expresion',3,'p_expresion_binaria','Sintactico.py',85),
  ('expresion -> valor ANDB valor','expresion',3,'p_expresion_binaria','Sintactico.py',86),
  ('expresion -> valor ORB valor','expresion',3,'p_expresion_binaria','Sintactico.py',87),
  ('expresion -> valor XORB valor','expresion',3,'p_expresion_binaria','Sintactico.py',88),
  ('expresion -> valor SHIFTD valor','expresion',3,'p_expresion_binaria','Sintactico.py',89),
  ('expresion -> valor SHIFTI valor','expresion',3,'p_expresion_binaria','Sintactico.py',90),
  ('expresion -> valor AND valor','expresion',3,'p_expresion_binaria','Sintactico.py',95),
  ('expresion -> valor OR valor','expresion',3,'p_expresion_binaria','Sintactico.py',96),
  ('expresion -> valor XOR valor','expresion',3,'p_expresion_binaria','Sintactico.py',97),
  ('expresion -> valor DIFERENTE valor','expresion',3,'p_expresion_binaria','Sintactico.py',100),
  ('expresion -> valor IGUALDOBLE valor','expresion',3,'p_expresion_binaria','Sintactico.py',101),
  ('expresion -> valor MAYOR valor','expresion',3,'p_expresion_binaria','Sintactico.py',102),
  ('expresion -> valor MAYORIGUAL valor','expresion',3,'p_expresion_binaria','Sintactico.py',103),
  ('expresion -> valor MENORIGUAL valor','expresion',3,'p_expresion_binaria','Sintactico.py',104),
  ('expresion -> valor MENOR valor','expresion',3,'p_expresion_binaria','Sintactico.py',105),
  ('expresion -> valor','expresion',1,'p_expresion_sola','Sintactico.py',111),
  ('expresion -> MENOS valor','expresion',2,'p_expresion_unaria','Sintactico.py',115),
  ('expresion -> ABS PARA valor PARC','expresion',4,'p_expresion_unaria','Sintactico.py',116),
  ('expresion -> NOTB valor','expresion',2,'p_expresion_unaria','Sintactico.py',117),
  ('expresion -> NOT valor','expresion',2,'p_expresion_unaria','Sintactico.py',118),
  ('expresion -> MAS valor','expresion',2,'p_expresion_unaria','Sintactico.py',119),
  ('expresion -> READ PARA PARC','expresion',3,'p_expresion_unaria','Sintactico.py',120),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion_agrupacion','Sintactico.py',129),
  ('valor -> ENTERO','valor',1,'p_expresion_entero','Sintactico.py',134),
  ('valor -> DECIMAL','valor',1,'p_expresion_decimal','Sintactico.py',140),
  ('valor -> DOLAR IDENTIFICADOR','valor',2,'p_expresion_valor_unico_variable','Sintactico.py',145),
]
