
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASMENOSleftPORDIVIDIDOrightUMENOSCORA CORC DECIMAL DIVIDIDO ENTERO MAS MENOS PARA PARC POR PUNTOCOMAinicio    : instruccionesinstrucciones : instrucciones instruccioninstrucciones : instruccioninstruccion :  expresion  PUNTOCOMAexpresion : expresion MAS expresion\n                  | expresion MENOS expresion\n                  | expresion POR expresion\n                  | expresion DIVIDIDO expresionexpresion : MENOS expresion %prec UMENOSexpresion : PARA expresion PARCexpresion    : ENTERO\n                    | DECIMAL'
    
_lr_action_items = {'MENOS':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,],[5,5,-3,12,5,5,-11,-12,-2,-4,5,5,5,5,-9,12,-5,-6,-7,-8,-10,]),'PARA':([0,2,3,5,6,9,10,11,12,13,14,],[6,6,-3,6,6,-2,-4,6,6,6,6,]),'ENTERO':([0,2,3,5,6,9,10,11,12,13,14,],[7,7,-3,7,7,-2,-4,7,7,7,7,]),'DECIMAL':([0,2,3,5,6,9,10,11,12,13,14,],[8,8,-3,8,8,-2,-4,8,8,8,8,]),'$end':([1,2,3,9,10,],[0,-1,-3,-2,-4,]),'PUNTOCOMA':([4,7,8,15,17,18,19,20,21,],[10,-11,-12,-9,-5,-6,-7,-8,-10,]),'MAS':([4,7,8,15,16,17,18,19,20,21,],[11,-11,-12,-9,11,-5,-6,-7,-8,-10,]),'POR':([4,7,8,15,16,17,18,19,20,21,],[13,-11,-12,-9,13,13,13,-7,-8,-10,]),'DIVIDIDO':([4,7,8,15,16,17,18,19,20,21,],[14,-11,-12,-9,14,14,14,-7,-8,-10,]),'PARC':([7,8,15,16,17,18,19,20,21,],[-11,-12,-9,21,-5,-6,-7,-8,-10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'inicio':([0,],[1,]),'instrucciones':([0,],[2,]),'instruccion':([0,2,],[3,9,]),'expresion':([0,2,5,6,11,12,13,14,],[4,4,15,16,17,18,19,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> inicio","S'",1,None,None,None),
  ('inicio -> instrucciones','inicio',1,'p_inicio','Sintactico.py',13),
  ('instrucciones -> instrucciones instruccion','instrucciones',2,'p_instrucciones_lista','Sintactico.py',17),
  ('instrucciones -> instruccion','instrucciones',1,'p_instrucciones_lista_inicio','Sintactico.py',22),
  ('instruccion -> expresion PUNTOCOMA','instruccion',2,'p_instrucciones_evaluar','Sintactico.py',26),
  ('expresion -> expresion MAS expresion','expresion',3,'p_expresion_binaria','Sintactico.py',31),
  ('expresion -> expresion MENOS expresion','expresion',3,'p_expresion_binaria','Sintactico.py',32),
  ('expresion -> expresion POR expresion','expresion',3,'p_expresion_binaria','Sintactico.py',33),
  ('expresion -> expresion DIVIDIDO expresion','expresion',3,'p_expresion_binaria','Sintactico.py',34),
  ('expresion -> MENOS expresion','expresion',2,'p_expresion_unaria','Sintactico.py',46),
  ('expresion -> PARA expresion PARC','expresion',3,'p_expresion_agrupacion','Sintactico.py',51),
  ('expresion -> ENTERO','expresion',1,'p_expresion_number','Sintactico.py',56),
  ('expresion -> DECIMAL','expresion',1,'p_expresion_number','Sintactico.py',57),
]
