# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
#
# Created by: PyQt5 UI code generator 5.15.0
#


from PyQt5 import QtCore, QtGui, QtWidgets
from Contenido.LstInstruccion.ABCInstruccion import Ts
from Contenido.LstInstruccion.ABCInstruccion import ListaInstruccion
from Contenido.Analizadores.Sintactico import analizar_ascendente
import re


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(414, 550)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.btn_abrir = QtWidgets.QPushButton(self.centralwidget)
        self.btn_abrir.setGeometry(QtCore.QRect(10, 10, 41, 41))
        self.btn_abrir.setObjectName("btn_abrir")
        self.btn_abrir_2 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_abrir_2.setGeometry(QtCore.QRect(60, 10, 41, 41))
        self.btn_abrir_2.setObjectName("btn_abrir_2")
        self.btn_abrir_3 = QtWidgets.QPushButton(self.centralwidget)
        self.btn_abrir_3.setGeometry(QtCore.QRect(110, 10, 41, 41))
        self.btn_abrir_3.setObjectName("btn_abrir_3")
        self.btn_ejecutar = QtWidgets.QPushButton(self.centralwidget)
        self.btn_ejecutar.setGeometry(QtCore.QRect(160, 10, 41, 41))
        self.btn_ejecutar.setObjectName("btn_ejecutar")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(10, 80, 391, 431))
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.txt_entrada = QtWidgets.QTextEdit(self.tab)
        self.txt_entrada.setGeometry(QtCore.QRect(10, 10, 361, 291))
        self.txt_entrada.setObjectName("txt_entrada")
        self.txt_consola = QtWidgets.QTextEdit(self.tab)
        self.txt_consola.setGeometry(QtCore.QRect(10, 320, 361, 71))
        self.txt_consola.setObjectName("txt_consola")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.tabWidget.addTab(self.tab_3, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 414, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.btn_abrir.clicked.connect(self.color)
        self.btn_ejecutar.clicked.connect(self.parser)

    def hola(self):
        print(self.txt_entrada.toPlainText())

    def pintar_comentarios(self,entrada):
        ini_span = "<span style=" + chr(34) + "color: #015002" + chr(34) + ">"
        return re.sub(r'(#(.*)(\n)?)', ini_span + (r"\1") + "</span>", entrada)

    def pintar_valores(self,entrada):
        ini_span = "<span style=" + chr(34) + "color: #011E94 " + chr(34) + ">"
        return re.sub(r'(("([^"]*)")|( [0-9]+ )|([0-9]\.[0-9]+))', ini_span + (r"\1") + "</span>", entrada)

    def pintar_simbolos(self,entrada):
        ini_span = "<span style=" + chr(34) + "color: #738786 " + chr(34) + ">"
        return re.sub(r'((\+)|(-)|( / )|(\*)|( > )|( < )|( = )|(%)|(!=)|(==)|(\()|(\)))', ini_span + (r"\1") + "</span>", entrada)

    def pintar_variables(self,entrada):
        ini_span = "<span style=" + chr(34) + "color: #058695" + chr(34) + ">"
        return re.sub(r"(\$[a-z]([a-z]|[0-9])*)", ini_span + (r"\1") + "</span>", entrada)

    def pintar_reservadas_grises(self,entrada):
        ini_span = "<span style=" + chr(34) + "color: #738786" + chr(34) + ">"
        return re.sub(r"((main)|(print)|(exit))", ini_span + (r"\1") + "</span>", entrada)

    def pintar_reservadas_moradas(self,entrada):
        ini_span = "<span style=" + chr(34) + "color: #830495  " + chr(34) + ">"
        return re.sub(r"((if)|(goto)|(array))", ini_span + (r"\1") + "</span>", entrada)

    def color(self):
        self.txt_consola.clear()
        self.txt_entrada.clear()
        f = open("C:/Users/norki/Desktop/interprete/entrada.txt", "r")
        #f = open("C:/Users/Esnorki/Desktop/interprete/entrada.txt", "r")
        input: str = f.read()

        input = self.pintar_comentarios(input)

        input = self.pintar_valores(input)

        input = self.pintar_reservadas_grises(input)
        input = self.pintar_reservadas_moradas(input)
        input = self.pintar_variables(input)

        input = self.pintar_simbolos(input)
        input = re.sub(r"(;)", (r"\1") , input)
        input = re.sub(r"(\n)","<br>", input)
        #
        #
        input= "<div contenteditable>\n"+ input

        input +="\n</div>"

        #print(input)
        self.txt_entrada.append(input)
        print(self.txt_entrada.toPlainText())

    def parser(self):
        self.txt_consola.clear()
        self.txt_entrada.clear()
        f = open("C:/Users/norki/Desktop/interprete/entrada.txt", "r")
        #f = open("C:/Users/Esnorki/Desktop/interprete/entrada.txt", "r")
        input: str = f.read()
        self.txt_entrada.append(input)
        global Ts
        Ts.guardar_consola(self.txt_consola)
        Ts.nueva_ejecucion()
        raiz_produccion: ListaInstruccion = analizar_ascendente(input)
        if raiz_produccion is not None:
            Ts.cargar_etiquetas(raiz_produccion)
            Ts.ejecutar_main()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.btn_abrir.setText(_translate("MainWindow", "Abrir"))
        self.btn_abrir_2.setText(_translate("MainWindow", "Guardar"))
        self.btn_abrir_3.setText(_translate("MainWindow", "Como"))
        self.btn_ejecutar.setText(_translate("MainWindow", "Ejecutar"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Archivo Entrada"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Visualizar"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Reportes"))


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
